<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Silence Blog</title>
        <link>https://silencehuliang.github.io/</link>
        <description>Silence‘s blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>silencehuliang@gmail.com (Silence)</managingEditor>
            <webMaster>silencehuliang@gmail.com (Silence)</webMaster><lastBuildDate>Sat, 26 Dec 2020 00:00:00 &#43;0000</lastBuildDate>
            <atom:link href="https://silencehuliang.github.io/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>Python学习之路-Tornado基础:模板</title>
    <link>https://silencehuliang.github.io/python%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF-tornado%E5%9F%BA%E7%A1%80%E6%A8%A1%E6%9D%BF/</link>
    <pubDate>Sat, 26 Dec 2020 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://silencehuliang.github.io/python%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF-tornado%E5%9F%BA%E7%A1%80%E6%A8%A1%E6%9D%BF/</guid>
    <description><![CDATA[静态文件 现在有一个预先写好的静态页面文件， 我们来看下如何用tornado提供静态文件。 static_path 我们可以通过向web.Application类的构造]]></description>
</item><item>
    <title>Python学习之路-Tornado基础:深入Tornado</title>
    <link>https://silencehuliang.github.io/python%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF-tornado%E5%9F%BA%E7%A1%80%E6%B7%B1%E5%85%A5tornado/</link>
    <pubDate>Sat, 19 Dec 2020 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://silencehuliang.github.io/python%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF-tornado%E5%9F%BA%E7%A1%80%E6%B7%B1%E5%85%A5tornado/</guid>
    <description><![CDATA[Application settings 前面的学习中，我们在创建tornado.web.Application的对象时，传入了第一个参数——路由映射列表。实际上Applicat]]></description>
</item><item>
    <title>Python学习之路-Tornado基础:初识Tornado</title>
    <link>https://silencehuliang.github.io/python%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF-tornado%E5%9F%BA%E7%A1%80%E5%88%9D%E8%AF%86tornado/</link>
    <pubDate>Sat, 12 Dec 2020 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://silencehuliang.github.io/python%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF-tornado%E5%9F%BA%E7%A1%80%E5%88%9D%E8%AF%86tornado/</guid>
    <description><![CDATA[安装 自动安装 1 $ pip install tornado 手动安装 下载安装包tornado-4.3.tar.gz（https://pypi.python.org/package]]></description>
</item><item>
    <title>Python学习之路-Tornado基础:HelloTornado</title>
    <link>https://silencehuliang.github.io/python%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF-tornado%E5%9F%BA%E7%A1%80hellotornado/</link>
    <pubDate>Sat, 05 Dec 2020 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://silencehuliang.github.io/python%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF-tornado%E5%9F%BA%E7%A1%80hellotornado/</guid>
    <description><![CDATA[前言 回想Django的部署方式 以Django为代表的python web应用部署时采用wsgi协议与服务器对接（被服务器托管），而这类服务器通]]></description>
</item><item>
    <title>Python学习之路-DRF基础:其他功能</title>
    <link>https://silencehuliang.github.io/python%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF-%E5%85%B6%E4%BB%96%E5%8A%9F%E8%83%BD/</link>
    <pubDate>Sat, 17 Oct 2020 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://silencehuliang.github.io/python%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF-%E5%85%B6%E4%BB%96%E5%8A%9F%E8%83%BD/</guid>
    <description><![CDATA[认证 使用 可以在配置文件中配置全局默认的认证方案 1 2 3 4 5 6 REST_FRAMEWORK = { &#39;DEFAULT_AUTHENTICATION_CLASSES&#39;: ( &#39;rest_framework.authentication.BasicAuthentication&#39;, # 基本认证 &#39;rest_framework.authentication.SessionAuthentication&#39;, # session认证 ) } 也可以在每个视图中通过设置auth]]></description>
</item><item>
    <title>Python学习之路-DRF基础:视图</title>
    <link>https://silencehuliang.github.io/python%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF-%E8%A7%86%E5%9B%BE/</link>
    <pubDate>Sat, 10 Oct 2020 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://silencehuliang.github.io/python%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF-%E8%A7%86%E5%9B%BE/</guid>
    <description><![CDATA[视图概览 简介 REST framework 提供了众多的通用视图基类与扩展类，以简化视图的编写。 视图的继承关系 视图的方法与属性 视图说明 两个基类 APIView 简介 rest_framework.views.APIView APIView是R]]></description>
</item><item>
    <title>Python学习之路-DRF基础:Serializer序列化器</title>
    <link>https://silencehuliang.github.io/python%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF-serializer%E5%BA%8F%E5%88%97%E5%8C%96%E5%99%A8/</link>
    <pubDate>Sat, 26 Sep 2020 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://silencehuliang.github.io/python%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF-serializer%E5%BA%8F%E5%88%97%E5%8C%96%E5%99%A8/</guid>
    <description><![CDATA[序列化器的作用 进行数据的校验 对数据对象进行转换 定义Serializer 定义方法 Django REST framework中的Serializer使用类来定义，须]]></description>
</item><item>
    <title>Python学习之路-DRF基础:工程搭建</title>
    <link>https://silencehuliang.github.io/python%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF-drf%E5%B7%A5%E7%A8%8B%E6%90%AD%E5%BB%BA/</link>
    <pubDate>Sat, 19 Sep 2020 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://silencehuliang.github.io/python%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF-drf%E5%B7%A5%E7%A8%8B%E6%90%AD%E5%BB%BA/</guid>
    <description><![CDATA[环境安装与配置 DRF需要以下依赖： Python (2.7, 3.2, 3.3, 3.4, 3.5, 3.6) Django (1.10, 1.11, 2.0) DRF是以Django扩展应用的方式提供的，所以我们可以直接利用已有的Django环]]></description>
</item><item>
    <title>Python学习之路-DRF基础:初识DRF</title>
    <link>https://silencehuliang.github.io/python%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF-%E5%88%9D%E8%AF%86drf/</link>
    <pubDate>Sat, 12 Sep 2020 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://silencehuliang.github.io/python%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF-%E5%88%9D%E8%AF%86drf/</guid>
    <description><![CDATA[Web应用模式 在开发Web应用中，有两种应用模式： 前后端不分离 前后端分离 前后端不分离 在前后端不分离的应用模式中，前端页面看到的效果都是由后端]]></description>
</item><item>
    <title>Python学习之路-Django基础:Admin站点</title>
    <link>https://silencehuliang.github.io/python%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF-admin%E7%AB%99%E7%82%B9/</link>
    <pubDate>Sat, 05 Sep 2020 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://silencehuliang.github.io/python%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF-admin%E7%AB%99%E7%82%B9/</guid>
    <description><![CDATA[简介 假设我们要设计一个新闻网站，我们需要编写展示给用户的页面，网页上展示的新闻信息是从哪里来的呢？是从数据库中查找到新闻的信息，然后把它展]]></description>
</item></channel>
</rss>
